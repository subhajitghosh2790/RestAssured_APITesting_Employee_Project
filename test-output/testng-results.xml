<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="20" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="restassuredtestsuite" duration-ms="24406" started-at="2019-09-21T11:44:10Z" finished-at="2019-09-21T11:44:34Z">
    <groups>
    </groups>
    <test name="restassuredtests" duration-ms="24406" started-at="2019-09-21T11:44:10Z" finished-at="2019-09-21T11:44:34Z">
      <class name="com.employeeapi.testcases.TC005_Delete_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testcases.TC005_Delete_Employee_Record@d041cf]" name="setup" is-config="true" duration-ms="16" started-at="2019-09-21T12:44:27Z" finished-at="2019-09-21T12:44:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="deleteRecord()[pri:0, instance:com.employeeapi.testcases.TC005_Delete_Employee_Record@d041cf]" name="deleteRecord" is-config="true" duration-ms="7672" started-at="2019-09-21T12:44:27Z" finished-at="2019-09-21T12:44:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteRecord -->
        <test-method status="PASS" signature="getResponseBody()[pri:0, instance:com.employeeapi.testcases.TC005_Delete_Employee_Record@d041cf]" name="getResponseBody" duration-ms="7" started-at="2019-09-21T12:44:34Z" finished-at="2019-09-21T12:44:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseBody -->
        <test-method status="PASS" signature="validateStatusCode()[pri:0, instance:com.employeeapi.testcases.TC005_Delete_Employee_Record@d041cf]" name="validateStatusCode" duration-ms="7" started-at="2019-09-21T12:44:34Z" finished-at="2019-09-21T12:44:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateStatusCode -->
      </class> <!-- com.employeeapi.testcases.TC005_Delete_Employee_Record -->
      <class name="com.employeeapi.testcases.TC004_Put_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@134affc]" name="setup" is-config="true" duration-ms="14" started-at="2019-09-21T12:44:23Z" finished-at="2019-09-21T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="modifyEmployee()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@134affc]" name="modifyEmployee" is-config="true" duration-ms="3626" started-at="2019-09-21T12:44:23Z" finished-at="2019-09-21T12:44:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modifyEmployee -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC004_Put_Employee_Record@134affc]" name="checkResponseBody" duration-ms="2" started-at="2019-09-21T12:44:27Z" finished-at="2019-09-21T12:44:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
      </class> <!-- com.employeeapi.testcases.TC004_Put_Employee_Record -->
      <class name="com.employeeapi.testcases.TC003_Post_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@cbfb61]" name="setup" is-config="true" duration-ms="15" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@cbfb61]" name="createEmployee" is-config="true" duration-ms="3767" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@cbfb61]" name="checkContentEncoding" duration-ms="2" started-at="2019-09-21T12:44:23Z" finished-at="2019-09-21T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@cbfb61]" name="checkContentLength" duration-ms="1" started-at="2019-09-21T12:44:23Z" finished-at="2019-09-21T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@cbfb61]" name="checkContentType" duration-ms="7" started-at="2019-09-21T12:44:23Z" finished-at="2019-09-21T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@cbfb61]" name="checkResponseBody" duration-ms="2" started-at="2019-09-21T12:44:23Z" finished-at="2019-09-21T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkServer()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@cbfb61]" name="checkServer" duration-ms="1" started-at="2019-09-21T12:44:23Z" finished-at="2019-09-21T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServer -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@cbfb61]" name="checkStatusCode" duration-ms="1" started-at="2019-09-21T12:44:23Z" finished-at="2019-09-21T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@cbfb61]" name="checkStatusLine" duration-ms="1" started-at="2019-09-21T12:44:23Z" finished-at="2019-09-21T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="checkSuccessCode()[pri:0, instance:com.employeeapi.testcases.TC003_Post_Employee_Record@cbfb61]" name="checkSuccessCode" duration-ms="1" started-at="2019-09-21T12:44:23Z" finished-at="2019-09-21T12:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSuccessCode -->
      </class> <!-- com.employeeapi.testcases.TC003_Post_Employee_Record -->
      <class name="com.employeeapi.testcases.TC001_Get_All_Employees">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="setup" is-config="true" duration-ms="251" started-at="2019-09-21T12:44:10Z" finished-at="2019-09-21T12:44:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="getAllEmployees" is-config="true" duration-ms="8668" started-at="2019-09-21T12:44:10Z" finished-at="2019-09-21T12:44:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="checkContentEncoding" duration-ms="42" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="FAIL" signature="checkContentLength()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="checkContentLength" duration-ms="4" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at com.employeeapi.testcases.TC001_Get_All_Employees.checkContentLength(TC001_Get_All_Employees.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="checkContentType" duration-ms="3" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkCookie()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="checkCookie" duration-ms="5" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookie -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="checkResponseBody" duration-ms="159" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="FAIL" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="checkResponseTime" duration-ms="6" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.employeeapi.testcases.TC001_Get_All_Employees.checkResponseTime(TC001_Get_All_Employees.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="FAIL" signature="checkServerType()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="checkServerType" duration-ms="6" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [nginx/1.14.1] but found [Apache]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [nginx/1.14.1] but found [Apache]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at com.employeeapi.testcases.TC001_Get_All_Employees.checkServerType(TC001_Get_All_Employees.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="checkStatusCode" duration-ms="4" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="checkStatusLine" duration-ms="3" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.employeeapi.testcases.TC001_Get_All_Employees@b5cdba]" name="afterClass" is-config="true" duration-ms="1" started-at="2019-09-21T12:44:19Z" finished-at="2019-09-21T12:44:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.employeeapi.testcases.TC001_Get_All_Employees -->
    </test> <!-- restassuredtests -->
  </suite> <!-- restassuredtestsuite -->
</testng-results>
